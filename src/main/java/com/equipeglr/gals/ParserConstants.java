package com.equipeglr.gals;

public interface ParserConstants {
    int START_SYMBOL = 47;

    int FIRST_NON_TERMINAL = 47;
    int FIRST_SEMANTIC_ACTION = 82;

    int[][] PARSER_TABLE = {
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, 1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 6, -1, -1, -1, -1, -1, 6, -1, 6, -1, -1, -1, -1, -1, 6, -1, -1, 6, 6, 6, -1, -1, 4, 5, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 2, -1, -1, -1, -1, -1, 2, -1, 2, -1, -1, -1, -1, -1, 2, -1, -1, 2, 2, 2, -1, -1, 2, 2, -1, -1, -1, -1,
                    -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8,
                    -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, 10, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    14, 15, -1, 14, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 20, -1, 18, -1, -1, -1, -1, 17, -1, -1, 16, -1, -1, -1, -1, 19, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 21, 22, 23, 24, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 27, -1, -1, -1, -1, -1, 27, -1, 27, -1, -1, -1, -1, -1, 27, -1, -1, 27, 27, 27, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 29, -1, -1, -1, -1, -1, 29, -1, 29, 28, 28, -1, -1, -1, 29, -1, -1, 29, 29, 29, -1, -1, -1, -1, 28,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 30, -1, -1, -1, -1, -1, 35, -1, 34, -1, -1, -1, -1, -1, 33, -1, -1, 32, 32, 31, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 39, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 42, 42, 42, 42, 42, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1,
                    -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, 42, 42, -1, -1, -1, -1, -1, 42 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, 44, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 49, 49, 49, 49, 49, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1,
                    -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, -1, 49, 49, -1, -1, -1, -1, -1, 49 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, 50, 50, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 52, -1 },
            { -1, 53, 53, 53, 53, 53, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1,
                    -1, -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, 53, 53, -1, -1, -1, -1, -1, 56 },
            { -1, 57, 57, 57, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, 57, 57, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, 58, 58, -1, -1, 58, -1, -1, 59, 59, 59, 59, -1, -1, -1, -1, -1, 58, 58, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 64, 64, 64, 64, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, 64, 64, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, 65, 65, -1, -1, 65, -1, -1, 65, 65, 65, 65, 66, 67, -1, -1, -1, 65, 65, -1 },
            { -1, 68, 68, 68, 68, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, 68, 68, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, 69, 69, -1, -1, 69, -1, -1, 69, 69, 69, 69, 69, 69, 70, 71, 72, 69, 69, -1 },
            { -1, 73, 74, 75, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                    -1, -1, -1, -1, 78, -1, -1, -1, -1, -1, -1, -1, 79, 80, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = {
            { 97, 15, 18, 33, 48, 34, 98 },
            { 49, 50 },
            { 48 },
            { 0 },
            { 51 },
            { 54 },
            { 61 },
            { 24, 55, 52 },
            { 27, 57, 112, 113, 53 },
            { 30, 58, 29 },
            { 29 },
            { 30, 58, 29 },
            { 25, 55, 52 },
            { 2, 114, 56 },
            { 0 },
            { 28, 55 },
            { 17 },
            { 14 },
            { 9 },
            { 22 },
            { 7 },
            { 3 },
            { 4 },
            { 5 },
            { 6 },
            { 23 },
            { 13 },
            { 61, 60 },
            { 0 },
            { 59 },
            { 62 },
            { 63 },
            { 65 },
            { 68 },
            { 70 },
            { 8, 29 },
            { 2, 114, 30, 71, 116, 29 },
            { 21, 31, 64, 55, 117, 32, 29 },
            { 6, 104, 96, 28 },
            { 0 },
            { 19, 31, 66, 32, 29 },
            { 20, 31, 66, 32, 29, 99 },
            { 71, 96, 67 },
            { 0 },
            { 28, 66 },
            { 16, 31, 71, 32, 106, 59, 69, 12, 108, 29 },
            { 11, 107, 59 },
            { 0 },
            { 109, 10, 59, 26, 31, 71, 32, 110, 12, 29 },
            { 73, 72 },
            { 0 },
            { 44, 73, 100, 72 },
            { 45, 73, 101, 72 },
            { 74 },
            { 23, 93 },
            { 13, 94 },
            { 46, 73, 95 },
            { 77, 75 },
            { 0 },
            { 76, 91, 77, 92 },
            { 35 },
            { 36 },
            { 37 },
            { 38 },
            { 79, 78 },
            { 0 },
            { 39, 79, 83, 78 },
            { 40, 79, 84, 78 },
            { 81, 80 },
            { 0 },
            { 41, 81, 85, 80 },
            { 42, 81, 86, 80 },
            { 43, 81, 102, 80 },
            { 2, 115 },
            { 3, 87 },
            { 4, 88 },
            { 5, 103 },
            { 6, 104 },
            { 31, 71, 32 },
            { 39, 81, 89 },
            { 40, 81, 90 }
    };

    String[] PARSER_ERROR = {
        "",
        "EOF",//"Era esperado fim de programa",
        "identificador",//"Era esperado id",
        "constante_int",//"Era esperado cint",
        "constante_float",//"Era esperado cfloat",
        "constante_char",//"Era esperado cchar",
        "constante_string",//"Era esperado cstring",
        "boolean",//"Era esperado pr_boolean",
        "break",//"Era esperado pr_break",
        "char",//"Era esperado pr_char",
        "do",//"Era esperado pr_do",
        "else",//"Era esperado pr_else",
        "end",//"Era esperado pr_end",
        "false",//"Era esperado pr_false",
        "float",//"Era esperado pr_float",
        "fun",//"Era esperado pr_fun",
        "if",//"Era esperado pr_if",
        "int",//"Era esperado pr_int",
        "main",//"Era esperado pr_main",
        "print",//"Era esperado pr_print",
        "println",//"Era esperado pr_println",
        "readln",//"Era esperado pr_readln",
        "string",//"Era esperado pr_string",
        "true",//"Era esperado pr_true",
        "val",//"Era esperado pr_val",
        "var",//"Era esperado pr_var",
        "while",//"Era esperado pr_while",
        ":",//"Era esperado \":\"",
        ",",//"Era esperado \",\"",
        ";",//"Era esperado \";\"",
        "=",//"Era esperado \"=\"",
        "(",//"Era esperado \"(\"",
        ")",//"Era esperado \")\"",
        "{",//"Era esperado \"{\"",
        "}",//"Era esperado \"}\"",
        "==",//"Era esperado \"==\"",
        "!=",//"Era esperado \"!=\"",
        "<",//"Era esperado \"<\"",
        ">",//"Era esperado \">\"",
        "+",//"Era esperado \"+\"",
        "-",//"Era esperado \"-\"",
        "*",//"Era esperado \"*\"",
        "/",//"Era esperado \"/\"",
        "%",//"Era esperado \"%\"",
        "&&",//"Era esperado \"&&\"",
        "||",//"Era esperado \"||\"",
        "!",//"Era esperado \"!\"",
        "fun",//"<forma_geral_problema> inválido",
        "identificador break do if print println readln val var",// "<lista_de_instrucoes> inválido",
        "identificador break do if print println readln val var",//"<repete_instrucoes> inválido",
        "identificador break do if print println readln val var }",//"<tem_mais_instrucao> inválido",
        "val",//"<declaracao_constantes> inválido",
        ": =",//"<instancia> inválido",
        "; =",//"<declaracao_tipo> inválido",
        "var",//"<declaracao_variaveis> inválido",
        "identificador",//"<lista_id> inválido",
        ": , = )",//"<id> inválido",
        "boolean char float int string",// "<tipo> inválido",
        "constante_int constante_float constante_char constante_string false true",//"<valor> inválido",
        "identificador break do if print println readln",//"<lista_de_comandos> inválido",
        "identidicador break do else end if print println readln while",//"<repete_comando> inválido",
        "identificador break do if print println readln",//"<comando> inválido",
        "identificador",//"<atribuicao> inválido",
        "readln",//"<entrada_dados> inválido",
        "identificador constante_string",//"<atribui_string> inválido",
        "print println",//"<saida_dados> inválido",
        "expressão",//"<lista_de_expressao> inválido",
        ", )",//"<repete_expressao> inválido",
        "if", //"<selecao> inválido",
        "else end", // "<selecao_opcional> inválido",
        "do", //"<repeticao> inválido",
        "expressão",//"<expressao> inválido",
        "expressão",//"<expressao_> inválido",
        "expressão",//"<elemento> inválido",
        "expressão",//"<relacional> inválido",
        "expressão",//"<relacional_> inválido",
        "== != > <", //"<operador_relacional> inválido",
        "expressão",//"<aritmetica> inválido",
        "expressão",//"<aritmetica_> inválido",
        "expressão",//"<termo> inválido",
        "expressão",//"<termo_> inválido",
        "expressão",//"<fator> inválido"
    };
}
